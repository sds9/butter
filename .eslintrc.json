{
  "env": {
    "es2022": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "prettier", "import"],
  "rules": {
    // Prettier integration
    "prettier/prettier": "error",

    // TypeScript specific rules
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "destructuredArrayIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/no-empty-function": "warn",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/array-type": ["error", { "default": "array-simple" }],
    "@typescript-eslint/consistent-type-imports": [
      "error",
      { "prefer": "type-imports", "disallowTypeAnnotations": false }
    ],

    // Disable base ESLint rules that are covered by TypeScript
    "no-unused-vars": "off",
    "no-undef": "off",
    "no-redeclare": "off",
    "no-dupe-class-members": "off",

    // General code quality rules
    "no-console": "warn",
    "no-debugger": "error",
    "prefer-const": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-template": "error",
    "no-duplicate-imports": "error",
    "no-useless-rename": "error",
    "no-useless-computed-key": "error",
    "no-useless-constructor": "error",
    "no-useless-return": "error",
    "prefer-arrow-callback": "error",
    "prefer-destructuring": ["error", { "object": true, "array": false }],
    "prefer-spread": "error",
    "prefer-rest-params": "error",

    // Import rules
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-duplicates": "error",
    "import/no-unresolved": "off",
    "import/newline-after-import": "error",

    // Error prevention
    "no-throw-literal": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "warn",
    "no-promise-executor-return": "error",
    "require-atomic-updates": "error"
  },
  "overrides": [
    {
      "files": ["test/**/*.ts", "**/*.test.ts", "**/*.spec.ts", "e2e/**/*.ts"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-empty-function": "off",
        "no-console": "off",
        "prefer-const": "off"
      }
    },
    {
      "files": [
        "*.config.ts",
        "*.config.js",
        "vite.config.*",
        "vitest.config.*"
      ],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "import/no-default-export": "off"
      }
    },
    {
      "files": ["docs/**/*"],
      "rules": {
        "no-console": "off",
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      "files": ["scripts/**/*"],
      "rules": {
        "no-console": "off",
        "@typescript-eslint/no-var-requires": "off"
      }
    }
  ]
}
