{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Setup Project",
      "type": "shell",
      "command": "./scripts/setup.sh",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "runOptions": {
        "runOn": "folderOpen"
      },
      "detail": "Automatically runs 'nvm use' and 'npm install' when the workspace opens"
    },
    {
      "label": "Auto-Open Documentation",
      "type": "shell",
      "command": "./.vscode/open-docs.sh",
      "group": "build",
      "isBackground": false,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "detail": "Automatically open Docusaurus documentation in Simple Browser when workspace opens"
    },
    {
      "label": "Manual Setup",
      "type": "shell",
      "command": "./scripts/setup.sh",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "detail": "Manually run 'nvm use' and 'npm install' setup"
    },
    {
      "label": "Run Vitest",
      "type": "shell",
      "command": "npm",
      "args": ["test"],
      "group": "test",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      }
    },
    {
      "label": "Run Tests (Single Run)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:run"],
      "group": "test",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Run ESLint",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint"],
      "group": "build",
      "problemMatcher": ["$eslint-stylish"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Check ESLint",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint:check"],
      "group": "build",
      "problemMatcher": ["$eslint-stylish"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Run ESLint (Docs)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint:docs"],
      "group": "build",
      "problemMatcher": ["$eslint-stylish"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Run ESLint with auto-fix on Docusaurus docs TypeScript/JSX files"
    },
    {
      "label": "Check ESLint (Docs)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint:docs:check"],
      "group": "build",
      "problemMatcher": ["$eslint-stylish"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Check ESLint on Docusaurus docs TypeScript/JSX files without auto-fix"
    },
    {
      "label": "Format with Prettier",
      "type": "shell",
      "command": "npm",
      "args": ["run", "format"],
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "TypeScript Compile",
      "type": "shell",
      "command": "npm",
      "args": ["run", "build"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": ["$tsc"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "TypeScript Watch",
      "type": "shell",
      "command": "npm",
      "args": ["run", "watch"],
      "group": "build",
      "isBackground": true,
      "problemMatcher": ["$tsc-watch"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Type Check",
      "type": "shell",
      "command": "npm",
      "args": ["run", "typecheck"],
      "group": "build",
      "problemMatcher": ["$tsc"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Development Check",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev"],
      "group": "build",
      "problemMatcher": ["$eslint-stylish", "$tsc"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared"
      }
    },
    {
      "label": "CI Check",
      "type": "shell",
      "command": "npm",
      "args": ["run", "ci"],
      "group": "build",
      "problemMatcher": ["$eslint-stylish", "$tsc"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared"
      }
    },
    {
      "label": "Clean Build",
      "type": "shell",
      "command": "npm",
      "args": ["run", "clean"],
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Test with Coverage",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:coverage"],
      "group": "test",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Debug Tests",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:debug"],
      "group": "test",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared"
      }
    },
    {
      "label": "Check Dependencies",
      "type": "shell",
      "command": "npm",
      "args": ["run", "deps:check"],
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Generate TypeDoc (Native)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docusaurus:typedoc"],
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Generate TypeDoc using Docusaurus native plugin"
    },
    {
      "label": "Generate TypeDoc",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docs"],
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Generate TypeDoc documentation (legacy method)"
    },
    {
      "label": "TypeDoc Watch",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docs:watch"],
      "group": "build",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Watch TypeScript files and regenerate docs on changes"
    },
    {
      "label": "Serve TypeDoc",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docs:serve"],
      "group": "build",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Generate and serve TypeDoc documentation on http://localhost:3001"
    },
    {
      "label": "Generate Markdown Docs",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docs:markdown"],
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Generate TypeDoc documentation as Markdown files"
    },
    {
      "label": "Test with Coverage",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:coverage"],
      "group": "test",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Run tests and generate coverage report"
    },
    {
      "label": "Serve Coverage Report",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:coverage:serve"],
      "group": "test",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Generate coverage report and serve it on http://localhost:3002"
    },
    {
      "label": "Test Coverage Watch",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:coverage:watch"],
      "group": "test",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Watch tests and continuously update coverage report"
    },
    {
      "label": "Start Docusaurus",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docs:full"],
      "group": "build",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "detail": "Generate TypeDoc API docs and start Docusaurus (auto-starts on workspace open)"
    },
    {
      "label": "Build Docusaurus",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docusaurus:build"],
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Build Docusaurus for production"
    },
    {
      "label": "Full Documentation",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docs:full"],
      "group": "build",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Generate TypeDoc API docs and start Docusaurus"
    },
    {
      "label": "Documentation with Coverage",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docs:comprehensive"],
      "group": "build",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "clear": true
      },
      "detail": "Complete docs build: tests, coverage, TypeDoc, and Docusaurus"
    },
    {
      "label": "Run E2E Tests",
      "type": "shell",
      "command": "npm",
      "args": ["run", "e2e"],
      "group": "test",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "clear": true
      },
      "detail": "Run Playwright end-to-end tests"
    },
    {
      "label": "Run E2E Tests (UI Mode)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "e2e:ui"],
      "group": "test",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "clear": true
      },
      "detail": "Run Playwright tests in interactive UI mode"
    },
    {
      "label": "Debug E2E Tests",
      "type": "shell",
      "command": "npm",
      "args": ["run", "e2e:debug"],
      "group": "test",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "clear": true
      },
      "detail": "Debug Playwright tests step by step"
    }
  ]
}
